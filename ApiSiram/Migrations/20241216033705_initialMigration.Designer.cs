// <auto-generated />
using System;
using ApiSiram.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiSiram.Migrations
{
    [DbContext(typeof(SIRAMDBContext))]
    [Migration("20241216033705_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiSiram.Models.Activity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("reg_no")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("reg_no");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("activites");
                });

            modelBuilder.Entity("ApiSiram.Models.ActivityLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<Guid?>("batch_uuid")
                        .HasColumnType("uuid")
                        .HasColumnName("batch_uuid");

                    b.Property<long?>("causer_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint")
                        .HasColumnName("causer_id");

                    b.Property<string>("causer_type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("causer_type");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("events")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("events");

                    b.Property<string>("log_name")
                        .HasColumnType("text")
                        .HasColumnName("log_name");

                    b.Property<string>("properties")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("properties");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<long?>("subject_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint")
                        .HasColumnName("subject_id");

                    b.Property<string>("subject_type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("subject_type");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("activity_logs");
                });

            modelBuilder.Entity("ApiSiram.Models.AppSetting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("deleted_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("id");

                    b.ToTable("app_settings");
                });

            modelBuilder.Entity("ApiSiram.Models.Demographic", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("blood_type")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("blood_type");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<DateOnly>("date_of_birth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<byte[]>("foto")
                        .HasColumnType("bytea")
                        .HasColumnName("foto");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("maritalStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("maritalStatus");

                    b.Property<string>("nationality")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("nationality");

                    b.Property<string>("nik")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("nik");

                    b.Property<string>("occupation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("occupation");

                    b.Property<string>("place_of_birth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("place_of_birth");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("province");

                    b.Property<string>("reg_no")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("reg_no");

                    b.Property<string>("regency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("regency");

                    b.Property<string>("religion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("religion");

                    b.Property<string>("rt")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("rt");

                    b.Property<string>("rw")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("rw");

                    b.Property<byte[]>("signature")
                        .HasColumnType("bytea")
                        .HasColumnName("signature");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("sub_district")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sub_district");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("village")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("village");

                    b.HasKey("id");

                    b.ToTable("demographic");
                });

            modelBuilder.Entity("ApiSiram.Models.DetailActivity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("reg_no")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("reg_no");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.HasKey("id");

                    b.ToTable("detail_activities");
                });

            modelBuilder.Entity("ApiSiram.Models.Divisi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("deskripsi")
                        .HasColumnType("text")
                        .HasColumnName("deskripsi");

                    b.Property<string>("divisi_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("divisi_id");

                    b.Property<string>("komando_id")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("komando_id");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("nama_divisi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nama_divisi");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("divisi");
                });

            modelBuilder.Entity("ApiSiram.Models.Group", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("group_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("group_name");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("ApiSiram.Models.Jabatan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("jabatan_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("jabatan_id");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("nama_jabatan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nama_jabatan");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("tingkat_jabatan")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tingkat_jabatan");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("jabatan");
                });

            modelBuilder.Entity("ApiSiram.Models.Komando", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("deskripsi")
                        .HasColumnType("text")
                        .HasColumnName("deskripsi");

                    b.Property<string>("jenis_komando")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jenis_komando");

                    b.Property<string>("komando_id")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("komando_id");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("nama_komando")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nama_komando");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("wilayah")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("wilayah");

                    b.HasKey("id");

                    b.ToTable("komando");
                });

            modelBuilder.Entity("ApiSiram.Models.Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("child_seq")
                        .HasColumnType("integer")
                        .HasColumnName("child_seq");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("icon")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("icon");

                    b.Property<int?>("is_parent")
                        .HasColumnType("integer")
                        .HasColumnName("is_parent");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("menu_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("menu_id");

                    b.Property<string>("menu_name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("menu_name");

                    b.Property<int?>("parent_seq")
                        .HasColumnType("integer")
                        .HasColumnName("parent_seq");

                    b.Property<string>("siite_url")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("siite_url");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("ApiSiram.Models.MsField", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("key");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("id");

                    b.ToTable("ms_fields");
                });

            modelBuilder.Entity("ApiSiram.Models.Pangkat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("divisi_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("divisi_id");

                    b.Property<int?>("herarki")
                        .HasColumnType("integer")
                        .HasColumnName("herarki");

                    b.Property<string>("kategori")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("kategori");

                    b.Property<string>("kd_pangkat")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("kd_pangkat");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("nama_pangkat")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nama_pangkat");

                    b.Property<string>("pangkat_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("pangkat_id");

                    b.Property<int?>("parent_id")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("sub_kategori")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sub_kategori");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("pangkat");
                });

            modelBuilder.Entity("ApiSiram.Models.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("guard_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("guard_name");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("permissions_id")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("permissions_id");

                    b.Property<string>("roles_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("roles_name");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("permissions");
                });

            modelBuilder.Entity("ApiSiram.Models.Personel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("agama")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("agama");

                    b.Property<string>("alamat")
                        .HasColumnType("text")
                        .HasColumnName("alamat");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("desa")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("desa");

                    b.Property<string>("divisi_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("divisi_id");

                    b.Property<byte[]>("foto")
                        .HasColumnType("bytea")
                        .HasColumnName("foto");

                    b.Property<string>("golongan_darah")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("golongan_darah");

                    b.Property<string>("jabatan_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("jabatan_id");

                    b.Property<string>("jenis_kelamin")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("jenis_kelamin");

                    b.Property<string>("kabupaten")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("kabupaten");

                    b.Property<string>("kecamatan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("kecamatan");

                    b.Property<string>("kewarganegaraan")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("kewarganegaraan");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("nama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nama");

                    b.Property<string>("nik")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("nik");

                    b.Property<string>("nrp")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nrp");

                    b.Property<string>("pangkat_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("pangkat_id");

                    b.Property<string>("pekerjaan")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pekerjaan");

                    b.Property<string>("personel_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("personel_id");

                    b.Property<string>("provinsi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("provinsi");

                    b.Property<string>("rt")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("rt");

                    b.Property<string>("rw")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("rw");

                    b.Property<byte[]>("signature")
                        .HasColumnType("bytea")
                        .HasColumnName("signature");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("status_perkawinan")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status_perkawinan");

                    b.Property<DateOnly>("tanggal_lahir")
                        .HasColumnType("date")
                        .HasColumnName("tanggal_lahir");

                    b.Property<string>("tempat_lahir")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tempat_lahir");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("upline_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("upline_id");

                    b.Property<string>("user_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("personel");
                });

            modelBuilder.Entity("ApiSiram.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("guard_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("guard_name");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("roles_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("roles_name");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ApiSiram.Models.RoleHasPermission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("permissions_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("permissions_id");

                    b.Property<string>("roles_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("roles_id");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.HasKey("id");

                    b.ToTable("role_has_permissions");
                });

            modelBuilder.Entity("ApiSiram.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("first_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("last_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<string>("password")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<string>("personel_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("personel_id");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("telepon")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telepon");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("user_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("user_id");

                    b.Property<string>("username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.Property<string>("uuid")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("uuid");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ApiSiram.Models.UserGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<int>("group_id")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("user_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("user_groups");
                });

            modelBuilder.Entity("ApiSiram.Models.UserRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("created_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("last_updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("role_id")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<int>("status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("updated_by")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("updated_by");

                    b.Property<string>("user_id")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("user_id");

                    b.HasKey("id");

                    b.ToTable("user_roles");
                });
#pragma warning restore 612, 618
        }
    }
}
